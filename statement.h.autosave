#ifndef STATEMENT_H
#define STATEMENT_H

#include<iostream>
#include<vector>
#include<expression.h>
typedef std::vector<std::string> Token;
class Statement
{
    enum StatementType{LET,IF,PRINT,INPUT,GOTO,END,REM};
    /* 程序在program环境中执行 每一条statement会修改变量指 下条执行语句位置
     * 
     * LET 获得变量名与值 -> 修改变量名 = 值
     * IF GOTO 获得下条执行语句的位置N -1表示顺序执行 -> 定位下条执行语句
     * PRINT 获得变量名 ->输出值
     * INPUT 获得变量名 -> 等待输入值 变量名=值
     * REM 直接返回
     * END 结束
     * 
     * 
     * 
     * 
     */
public:
    Statement(Token tokens);
    int nextNumber;
    std::string var;
    int value;
    bool end;
    virtual void exec();
    virtual int getNextNumber();
    virtual std::string getVar();
    
};

class LETsta:public Statement
{
    LETsta(Token tokens);
    std::string var;
    Expression exp;
};

#endif // STATEMENT_H
